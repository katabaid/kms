[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "event_frequency": "All",
  "modified": "2024-03-15 09:20:58.615387",
  "module": "KMS",
  "name": "Insert Vital Signs after saving Patient Appointment",
  "reference_doctype": "Patient Appointment",
  "script": "if doc.appointment_date == frappe.utils.nowdate() and doc.status == 'Checked In':\n    frappe.get_doc(dict(\n        doctype = 'Vital Signs',\n        patient = doc.patient,\n        signs_date = frappe.utils.nowdate(),\n        signs_time = frappe.utils.nowtime(),\n        appointment = doc.name,\n        custom_branch = frappe.db.get_value('Healthcare Service Unit', doc.service_unit, 'custom_branch'),\n        vital_signs_note = doc.notes)).insert();",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "event_frequency": "All",
  "modified": "2024-01-14 13:27:28.728762",
  "module": "KMS",
  "name": "Set Branch in Healthcare Service Unit",
  "reference_doctype": "Healthcare Service Unit",
  "script": "if doc.is_group == 1 and doc.parent_healthcare_service_unit:\n    doc.custom_branch = frappe.db.get_value('Healthcare Service Unit', doc.parent_healthcare_service_unit, 'custom_branch')",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "event_frequency": "All",
  "modified": "2024-01-23 11:54:42.383362",
  "module": "KMS",
  "name": "Insert Queue Pooling after Vital Sign Submit",
  "reference_doctype": "Vital Signs",
  "script": "if doc.signs_date == frappe.utils.nowdate():\n    frappe.get_doc(dict(\n        doctype = 'Queue Pooling',\n        vital_sign = doc.name,\n        patient = doc.patient,\n        date = frappe.utils.nowdate(),\n        status = 'Queued',\n        appointment = doc.appointment,\n        company = doc.company,\n        branch = doc.custom_branch,\n        service_unit = frappe.db.get_value('Patient Appoinment', doc.appointment, 'service_unit'),\n        note = doc.vital_signs_note)).insert();",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Insert",
  "event_frequency": "All",
  "modified": "2024-02-09 15:08:44.357982",
  "module": "KMS",
  "name": "Set Queue Pooling Status after Saving Encounter",
  "reference_doctype": "Patient Encounter",
  "script": "if doc.custom_queue_pooling:\n    qp = frappe.get_doc(\"Queue Pooling\", doc.custom_queue_pooling)\n    qp.status = \"Ongoing\"\n    qp.dequeue_time = frappe.utils.nowtime()\n    qp.encounter = doc.name\n    qp.healthcare_practitioner = doc.practitioner\n    qp.save()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Delete",
  "event_frequency": "All",
  "modified": "2024-02-09 07:12:24.007785",
  "module": "KMS",
  "name": "Unlink Queue Pooling before Delete",
  "reference_doctype": "Patient Encounter",
  "script": "if doc.custom_queue_pooling:\n    qp = frappe.get_doc(\"Queue Pooling\", doc.custom_queue_pooling)\n    qp.status = \"Queued\"\n    qp.dequeue_time = None\n    qp.encounter = None\n    qp.healthcare_practitioner = None\n    qp.save()\n    ",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "event_frequency": "All",
  "modified": "2024-03-18 14:19:57.946544",
  "module": "KMS",
  "name": "Warn after save Lab Test Outside of Normal Value",
  "reference_doctype": "Normal Test Result",
  "script": "if doc.result_value > doc.custom_max_value or doc.result_value < doc.custom_min_value:\n    frappe.msgprint(\n        msg=\"Result {doc.lab_test_event}: {doc.result_value} is out of normal value.\",\n        title=\"Warning\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Insert",
  "event_frequency": "All",
  "modified": "2024-03-24 22:47:07.884336",
  "module": "KMS",
  "name": "Customer name",
  "reference_doctype": "Customer",
  "script": "if doc.customer_type not in doc.customer_name and (doc.customer_type == 'PT' or doc.customer_type == 'PT'):\n    doc.customer_name = doc.customer_type + ' ' + doc.customer_name\n    doc.save()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "Daily",
  "modified": "2024-01-28 16:27:26.723966",
  "module": "KMS",
  "name": "Timeout Queue Pooling",
  "reference_doctype": null,
  "script": "queue_pooling = frappe.db.get_list('Queue Pooling', filters={'status': 'Queued'}, fields=['name', 'date'])\nfor q in queue_pooling:\n    if q['date']!=frappe.utils.today():\n        doc = frappe.get_doc('Queue Pooling', q['name'])\n        doc.status = 'Cancelled'\n        doc.cancel_reason = 'Timeout'\n        doc.save()",
  "script_type": "Scheduler Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "Daily",
  "modified": "2024-01-29 17:43:45.287927",
  "module": "KMS",
  "name": "Set No Show",
  "reference_doctype": null,
  "script": "queue_pooling = frappe.db.get_list('Queue Pooling', filters={'status': 'Scheduled'}, fields=['name', 'date'])\nfor q in queue_pooling:\n    if q['date']<frappe.utils.today():\n        doc = frappe.get_doc('Queue Pooling', q['name'])\n        doc.status = 'No Show'\n        doc.save()",
  "script_type": "Scheduler Event"
 }
]